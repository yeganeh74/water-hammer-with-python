#this is code for calculatting water hammer pressure in pipe lines
#generated by ali yeganeh
# mail: ali.yeganeh74@gmail.com
import matplotlib.pyplot as mplt
from prettytable import PrettyTable

#inputs given by user
Q = float(input("Enter the flow rate of pipe in LPS: "))  #flow rates in pipe
D = float(input("Enter the inner diameter of pipe in mm: "))  # inner diameter of pipe
t = float(input("Enter the thikness of pipe in mm: "))  # thikness of pipe in mm
T = float (input("Enter the temperature in °C: "))    # water temperature in °C
E = float (input("Enter modulus of elasticity of the pipe material [Mpa]: "))
L = float (input("Enter the lenght of pipe in m: "))
Tc = float (input("Enter the time of clouser in S: "))

E = E*1000000 # convert unit  from Mpa to N/m^2
Ew = 2200000000 #bulk modulus of elasticity of the fluid [N/m2]

A = (3.14*(D/1000)**2)/4  # area of pipe section in m^2
#calculating density of water in kg/m^3 at that temperature according to IAPWS Formulation 1995 equation
Density_of_water = 999.84847 + 6.337563e-2 * T - 8.523829e-3 * T**2 + 6.943248e-5 * T**3 - 3.821216e-7 * T**4

 # calculating speed of a pressure wave in this pipe
def wave_velocity():
    return (1/(Density_of_water*((1/Ew)+(D/(t*E)))))**0.5 

Tr = (2*L)/ wave_velocity()   #time for a complete round trip of the pressure wave along the pipe’s length in S

#calculating pressure of water hammer for Qi 
def presure_water_hammer(Qi,ti):
    Vi= (Qi/1000)/A
    if ti <= Tr:
        return (Density_of_water * wave_velocity() * Vi)/100000  # pressre of water hammer in bar
    else:
        return (Tr/ti)*((Density_of_water * wave_velocity() * Vi)/100000)
print("********report********")
print(f"for flow rate {Q}LPS and pipe diameter {D}mm the water hammer pressur is {presure_water_hammer(Q,Tc):.2f}bar for {Tc:.1f} S taken time for valve closure\n")
print(f"maximum time of rapid closure is {Tr:.1f} S")

# calculating water hammer presسure for different rate of flow 
table1 = PrettyTable(['time of clouser(S)', 'Flow Rate (LPS)', 'Velocity (m/s)', 'Water hammer pressure(bar)'])
table1.title = f"water hammer pressure for various time of clouser and flow rate in {D} mm diameter pipe"

Q_range = []
water_hammer_presure_range = []
water_hammer_presure_range_for_Q = []
Tci_range=[]
for ti in range (round(Tr/2), round((Tr*2)+1), round(Tr/2)):
    for Qi in  range(round(Q/2,),round(Q*2)+1, round(Q/2)):
        Pi = presure_water_hammer(Qi,ti)
        Vi = (Qi/1000)/A 
        table1.add_row([ti,Qi, round(Vi,2) , round(Pi, 2)])
        if ti < Tr:
            Q_range.append(Qi)
            water_hammer_presure_range.append(round(Pi, 2))
    Tci_range.append(ti)
    water_hammer_presure_range_for_Q.append(presure_water_hammer(Q, ti))     
print(table1)

# plot  water hammer presure vs time of clouser graph for one flow rate
mplt.plot(Tci_range, water_hammer_presure_range_for_Q)
mplt.xlabel("Time of closur (S)")
mplt.ylabel("water hammer presure(bar)")
mplt.title(f"water hammer presure vs Time of closure for flow rate {Q:.2f}LPS")
mplt.show()

# Plot the water hammer presure vs flow rate graph for rapid closure
mplt.plot(Q_range, water_hammer_presure_range)
mplt.xlabel("Flow Rate (LPS)")
mplt.ylabel("water hammer presure(bar)")
mplt.title("water hammer presure vs Flow Rate for rapid closure")
mplt.show()

#output to excel
with open('water_hammer_output.csv', 'w', newline='') as my_table:
    my_table.write(f"water hammer pressure for various time of clouser and flow rate in {D} mm diameter pipe,\n")
    my_table.write(table1.get_csv_string())